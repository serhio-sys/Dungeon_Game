# Generated by Django 4.0.5 on 2022-07-01 10:20

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Armor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='ARMOR NAME')),
                ('img', models.ImageField(upload_to='armor', verbose_name='IMG')),
                ('armor', models.IntegerField(verbose_name='AROMOR+')),
                ('balance', models.IntegerField(verbose_name='SUM')),
                ('lvl', models.IntegerField(verbose_name='LVL')),
            ],
        ),
        migrations.CreateModel(
            name='Enemy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, verbose_name='NAME')),
                ('health', models.IntegerField(default=100, verbose_name='HP')),
                ('attack', models.IntegerField(default=1, verbose_name='ATTACK')),
                ('defence', models.IntegerField(default=1, verbose_name='ARMOR')),
                ('lvl', models.IntegerField(default=1, verbose_name='LEVEL')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
                ('img', models.ImageField(default='', upload_to='enemy/', verbose_name='IMG')),
                ('armor', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='User.armor', verbose_name='ARMOR')),
            ],
        ),
        migrations.CreateModel(
            name='Weapon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='WEAPON NAME')),
                ('damage', models.IntegerField(verbose_name='DAMAGE+')),
                ('img', models.ImageField(upload_to='weapon', verbose_name='IMG')),
                ('balance', models.IntegerField(verbose_name='SUM')),
                ('lvl', models.IntegerField(verbose_name='LVL')),
            ],
        ),
        migrations.CreateModel(
            name='Newuser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('health', models.IntegerField(default=100, verbose_name='HP')),
                ('attack', models.IntegerField(default=5, verbose_name='ATTACK')),
                ('defence', models.IntegerField(default=3, verbose_name='ARMOR')),
                ('img', models.ImageField(default='', upload_to='img/', verbose_name='IMG')),
                ('balance', models.DecimalField(decimal_places=0, default=100, max_digits=10, verbose_name='MONEY')),
                ('lvl', models.IntegerField(default=1, verbose_name='LEVEL')),
                ('exp', models.IntegerField(default=0, verbose_name='EXP')),
                ('dungeon_lvl', models.IntegerField(default=1, verbose_name='DUNGEON LVL')),
                ('dungeon_loc', models.IntegerField(default=0, verbose_name='DUNGEON LOCATION')),
                ('is_fight', models.BooleanField(default=False, verbose_name='IS FIGHT')),
                ('armor', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.SET_NULL, to='User.armor', verbose_name='ARMOR')),
                ('enemy', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.SET_NULL, to='User.enemy', verbose_name='ENEMY')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('weapon', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.SET_NULL, to='User.weapon', verbose_name='WEAPON')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='enemy',
            name='weapon',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='User.weapon', verbose_name='WEAPON'),
        ),
    ]
